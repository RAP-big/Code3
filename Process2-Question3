#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MEMBERS 5
#define DAYS 6
#define MAX_LEN 50

// Members and nicknames
char *milliways_members[MEMBERS] = {
    "Jiyeon Park", "Ethan Smith", "Suphanan Wong", "Helena Silva", "Liam Wilson"
};

char *nicknames[MEMBERS] = {
    "Jiyeon", "Ethan", "Suphanan", "Helena", "Liam"
};

// Exercise types
const char *exercise_types[5][3] = {
    {"Running", "Cycling", "Fast Walking"},                 // Cardio
    {"Push-ups", "Squats", ""},                             // Full-body Strength
    {"Leg Press", "Leg Curl", ""},                          // Lower-body Strength
    {"Pull-ups", "Chin-ups", ""},                           // Upper-body Strength
    {"Plank", "Crunches", ""}                               // Core Strength
};

// Weekly routine: member_routine[member][day]
char member_routine[MEMBERS][DAYS][MAX_LEN];

// Function declarations
void show_menu();
void display_members();
int get_member_index(const char *input);
void setExerciseRoutine();
void getExerciseRoutine();

int main() {
    char choice[10];

    while (1) {
        show_menu();
        printf("Choose an option: ");
        fgets(choice, sizeof(choice), stdin);

        switch (choice[0]) {
            case 'C':
            case 'c':
                setExerciseRoutine();
                break;
            case 'D':
            case 'd':
                getExerciseRoutine();
                break;
            case '0':
                printf("Exiting program...\n");
                return 0;
            default:
                printf("Invalid option.\n");
        }
    }

    return 0;
}

void show_menu() {
    printf("\n======= Physical Strength & Knowledge Menu =======\n");
    printf("C. Set Basic Workout Routine\n");
    printf("D. View Basic Workout Routine\n");
    printf("0. Exit\n");
    printf("==================================================\n");
}

void display_members() {
    printf("\n--- Milliways Members ---\n");
    for (int i = 0; i < MEMBERS; i++) {
        printf("%d. %s (%s)\n", i + 1, milliways_members[i], nicknames[i]);
    }
}

int get_member_index(const char *input) {
    for (int i = 0; i < MEMBERS; i++) {
        if (strcmp(input, nicknames[i]) == 0 || strcmp(input, milliways_members[i]) == 0)
            return i;
    }
    return -1;
}

void setExerciseRoutine() {
    char input[MAX_LEN];
    int cardio_found, strength_found, core_used = 0;

    display_members();
    printf("Enter nickname or full name of the member: ");
    fgets(input, sizeof(input), stdin);
    input[strcspn(input, "\n")] = 0;

    int idx = get_member_index(input);
    if (idx == -1) {
        printf("Member not found.\n");
        return;
    }

    printf("Setting workout routine for %s (%s)...\n", milliways_members[idx], nicknames[idx]);

    for (int day = 0; day < DAYS; day++) {
        printf("\nDay %d (e.g., Running + Squats): ", day + 1);
        fgets(input, sizeof(input), stdin);
        input[strcspn(input, "\n")] = 0;

        // Rule checks
        cardio_found = strength_found = 0;

        char routine[MAX_LEN];
        strcpy(routine, input);

        char *token = strtok(routine, "+");
        while (token != NULL) {
            char *trim = token;
            while (*trim == ' ') trim++;  // trim leading spaces

            for (int i = 0; i < 3; i++) {
                if (strcmp(trim, exercise_types[0][i]) == 0) cardio_found = 1;
            }
            for (int i = 1; i <= 3; i++) {
                for (int j = 0; j < 3; j++) {
                    if (strcmp(trim, exercise_types[i][j]) == 0) strength_found = 1;
                }
            }
            for (int j = 0; j < 2; j++) {
                if (strcmp(trim, exercise_types[4][j]) == 0) {
                    if (core_used) {
                        printf("Core exercise already used this week! Choose another.\n");
                        goto redo_day;
                    } else {
                        strength_found = 1;
                        core_used = 1;
                    }
                }
            }

            token = strtok(NULL, "+");
        }

        if (!cardio_found || !strength_found) {
            printf("Each day must include at least one cardio and one strength/core exercise.\n");
            goto redo_day;
        }

        strncpy(member_routine[idx][day], input, MAX_LEN - 1);
        continue;

    redo_day:
        printf("Please re-enter valid routine for Day %d.\n", day + 1);
        day--;  // retry current day
    }

    printf("Workout routine set successfully.\n");
}

void getExerciseRoutine() {
    char input[MAX_LEN];
    display_members();
    printf("Enter nickname or full name of the member to view routine: ");
    fgets(input, sizeof(input), stdin);
    input[strcspn(input, "\n")] = 0;

    int idx = get_member_index(input);
    if (idx == -1) {
        printf("Member not found.\n");
        return;
    }

    printf("\nBasic Workout Routine for %s (%s):\n", milliways_members[idx], nicknames[idx]);
    const char *days[] = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
    for (int i = 0; i < DAYS; i++) {
        printf("%-10s: %s\n", days[i], member_routine[idx][i][0] ? member_routine[idx][i] : "(Not set)");
    }
}
